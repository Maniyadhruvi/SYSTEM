{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/components/Login/Login.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"container\": \"Login-module__KBzzkq__container\",\n  \"error\": \"Login-module__KBzzkq__error\",\n  \"errorMessage\": \"Login-module__KBzzkq__errorMessage\",\n  \"eyeIcon\": \"Login-module__KBzzkq__eyeIcon\",\n  \"inputGroup\": \"Login-module__KBzzkq__inputGroup\",\n  \"loginBox\": \"Login-module__KBzzkq__loginBox\",\n  \"loginButton\": \"Login-module__KBzzkq__loginButton\",\n  \"passwordWrapper\": \"Login-module__KBzzkq__passwordWrapper\",\n  \"signupButton\": \"Login-module__KBzzkq__signupButton\",\n  \"signupLink\": \"Login-module__KBzzkq__signupLink\",\n  \"slideInRight\": \"Login-module__KBzzkq__slideInRight\",\n  \"toast\": \"Login-module__KBzzkq__toast\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Dhruvi/system/my-app/src/app/components/Login/Login.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport styles from './Login.module.css';\r\nimport { useRouter } from 'next/navigation';\r\n\r\ninterface User {\r\n  email: string;\r\n  password: string;\r\n  username: string;\r\n}\r\n\r\nconst Login = () => {\r\n  const router = useRouter();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const validateForm = () => {\r\n    let isValid = true;\r\n    const newErrors = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n\r\n    // Email validation\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(formData.email)) {\r\n      newErrors.email = 'Please enter a valid email address';\r\n      isValid = false;\r\n    }\r\n\r\n    // Check credentials against stored users\r\n    const users: User[] = JSON.parse(localStorage.getItem('users') || '[]');\r\n    const user = users.find(u => u.email === formData.email);\r\n\r\n    if (!user) {\r\n      newErrors.email = 'Email not registered';\r\n      isValid = false;\r\n    } else if (user.password !== formData.password) {\r\n      newErrors.password = 'Incorrect password';\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    // Clear error when user starts typing\r\n    setErrors(prev => ({\r\n      ...prev,\r\n      [name]: ''\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (validateForm()) {\r\n      // Store the current user's email in localStorage\r\n      localStorage.setItem('currentUserEmail', formData.email);\r\n      \r\n      // Show success toast\r\n      setShowToast(true);\r\n      \r\n      // Hide toast after 3 seconds and redirect\r\n      setTimeout(() => {\r\n        setShowToast(false);\r\n        // After successful login, redirect to TaskManager\r\n        router.push('/tasks');\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleSignUpClick = () => {\r\n    router.push('/register');\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {showToast && (\r\n        <div className={styles.toast}>\r\n          Login successful! Redirecting...\r\n        </div>\r\n      )}\r\n\r\n      <div className={styles.loginBox}>\r\n        <h2>Welcome Back</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className={styles.inputGroup}>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={formData.email}\r\n              onChange={handleInputChange}\r\n              className={errors.email ? styles.error : ''}\r\n              required\r\n            />\r\n            {errors.email && (\r\n              <span className={styles.errorMessage}>{errors.email}</span>\r\n            )}\r\n          </div>\r\n          \r\n          <div className={styles.inputGroup}>\r\n            <div className={styles.passwordWrapper}>\r\n              <input\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={formData.password}\r\n                onChange={handleInputChange}\r\n                className={errors.password ? styles.error : ''}\r\n                required\r\n              />\r\n              <button \r\n                type=\"button\"\r\n                className={styles.eyeIcon}\r\n                onClick={togglePasswordVisibility}\r\n              >\r\n                {showPassword ? \"üëÅÔ∏è\" : \"üëÅÔ∏è‚Äçüó®Ô∏è\"}\r\n              </button>\r\n            </div>\r\n            {errors.password && (\r\n              <span className={styles.errorMessage}>{errors.password}</span>\r\n            )}\r\n          </div>\r\n\r\n          <button type=\"submit\" className={styles.loginButton}>\r\n            Login\r\n          </button>\r\n\r\n          <div className={styles.signupLink}>\r\n            Don&apos;t have a Gamification account?{' '}\r\n            <button \r\n              type=\"button\" \r\n              className={styles.signupButton}\r\n              onClick={handleSignUpClick}\r\n            >\r\n              Sign up\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Dhruvi/system/my-app/src/app/login/page.tsx"],"sourcesContent":["\"use client\";\r\nimport Login from '../components/Login/Login';\r\n\r\nexport default function LoginPage() {\r\n  return (\r\n    <main>\r\n      <Login />\r\n    </main>\r\n  );\r\n} "],"names":[],"mappings":";;;;AACA;AADA;;;AAGe,SAAS;IACtB,qBACE,6LAAC;kBACC,cAAA,6LAAC,8IAAA,CAAA,UAAK;;;;;;;;;;AAGZ;KANwB","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Dhruvi/system/my-app/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}