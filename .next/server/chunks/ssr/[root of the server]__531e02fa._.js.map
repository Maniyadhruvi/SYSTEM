{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/components/TaskManager.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"actionButton\": \"TaskManager-module__CKmgcq__actionButton\",\n  \"active\": \"TaskManager-module__CKmgcq__active\",\n  \"addChecklistItem\": \"TaskManager-module__CKmgcq__addChecklistItem\",\n  \"addTaskButton\": \"TaskManager-module__CKmgcq__addTaskButton\",\n  \"addTaskContainer\": \"TaskManager-module__CKmgcq__addTaskContainer\",\n  \"addTaskInput\": \"TaskManager-module__CKmgcq__addTaskInput\",\n  \"buttonCircle\": \"TaskManager-module__CKmgcq__buttonCircle\",\n  \"buttonLabel\": \"TaskManager-module__CKmgcq__buttonLabel\",\n  \"cancelButton\": \"TaskManager-module__CKmgcq__cancelButton\",\n  \"checklistCheckbox\": \"TaskManager-module__CKmgcq__checklistCheckbox\",\n  \"checklistContainer\": \"TaskManager-module__CKmgcq__checklistContainer\",\n  \"checklistItem\": \"TaskManager-module__CKmgcq__checklistItem\",\n  \"circleButton\": \"TaskManager-module__CKmgcq__circleButton\",\n  \"clearSearch\": \"TaskManager-module__CKmgcq__clearSearch\",\n  \"completed\": \"TaskManager-module__CKmgcq__completed\",\n  \"container\": \"TaskManager-module__CKmgcq__container\",\n  \"content\": \"TaskManager-module__CKmgcq__content\",\n  \"createButton\": \"TaskManager-module__CKmgcq__createButton\",\n  \"dayButton\": \"TaskManager-module__CKmgcq__dayButton\",\n  \"deleteButton\": \"TaskManager-module__CKmgcq__deleteButton\",\n  \"deleteContainer\": \"TaskManager-module__CKmgcq__deleteContainer\",\n  \"deleteHabitButton\": \"TaskManager-module__CKmgcq__deleteHabitButton\",\n  \"deleteHabitContainer\": \"TaskManager-module__CKmgcq__deleteHabitContainer\",\n  \"deleteIcon\": \"TaskManager-module__CKmgcq__deleteIcon\",\n  \"dueDate\": \"TaskManager-module__CKmgcq__dueDate\",\n  \"emptyIcon\": \"TaskManager-module__CKmgcq__emptyIcon\",\n  \"emptyState\": \"TaskManager-module__CKmgcq__emptyState\",\n  \"emptyText\": \"TaskManager-module__CKmgcq__emptyText\",\n  \"experienceIcon\": \"TaskManager-module__CKmgcq__experienceIcon\",\n  \"formGroup\": \"TaskManager-module__CKmgcq__formGroup\",\n  \"goldIcon\": \"TaskManager-module__CKmgcq__goldIcon\",\n  \"habitButton\": \"TaskManager-module__CKmgcq__habitButton\",\n  \"habitButtons\": \"TaskManager-module__CKmgcq__habitButtons\",\n  \"habitControls\": \"TaskManager-module__CKmgcq__habitControls\",\n  \"habitTypeButton\": \"TaskManager-module__CKmgcq__habitTypeButton\",\n  \"habitTypeSelection\": \"TaskManager-module__CKmgcq__habitTypeSelection\",\n  \"header\": \"TaskManager-module__CKmgcq__header\",\n  \"healthIcon\": \"TaskManager-module__CKmgcq__healthIcon\",\n  \"inactive\": \"TaskManager-module__CKmgcq__inactive\",\n  \"loading\": \"TaskManager-module__CKmgcq__loading\",\n  \"mainContainer\": \"TaskManager-module__CKmgcq__mainContainer\",\n  \"menuButton\": \"TaskManager-module__CKmgcq__menuButton\",\n  \"menuContainer\": \"TaskManager-module__CKmgcq__menuContainer\",\n  \"menuDropdown\": \"TaskManager-module__CKmgcq__menuDropdown\",\n  \"menuItem\": \"TaskManager-module__CKmgcq__menuItem\",\n  \"modal\": \"TaskManager-module__CKmgcq__modal\",\n  \"modalActions\": \"TaskManager-module__CKmgcq__modalActions\",\n  \"modalContent\": \"TaskManager-module__CKmgcq__modalContent\",\n  \"modalHeader\": \"TaskManager-module__CKmgcq__modalHeader\",\n  \"modalInput\": \"TaskManager-module__CKmgcq__modalInput\",\n  \"modalOverlay\": \"TaskManager-module__CKmgcq__modalOverlay\",\n  \"modalSelect\": \"TaskManager-module__CKmgcq__modalSelect\",\n  \"modalTextarea\": \"TaskManager-module__CKmgcq__modalTextarea\",\n  \"negativeButton\": \"TaskManager-module__CKmgcq__negativeButton\",\n  \"notification\": \"TaskManager-module__CKmgcq__notification\",\n  \"notificationContainer\": \"TaskManager-module__CKmgcq__notificationContainer\",\n  \"optionIcon\": \"TaskManager-module__CKmgcq__optionIcon\",\n  \"pageWrapper\": \"TaskManager-module__CKmgcq__pageWrapper\",\n  \"popup\": \"TaskManager-module__CKmgcq__popup\",\n  \"popupOption\": \"TaskManager-module__CKmgcq__popupOption\",\n  \"positiveButton\": \"TaskManager-module__CKmgcq__positiveButton\",\n  \"removeChecklistItem\": \"TaskManager-module__CKmgcq__removeChecklistItem\",\n  \"removeTag\": \"TaskManager-module__CKmgcq__removeTag\",\n  \"repeatEveryContainer\": \"TaskManager-module__CKmgcq__repeatEveryContainer\",\n  \"searchContainer\": \"TaskManager-module__CKmgcq__searchContainer\",\n  \"searchInput\": \"TaskManager-module__CKmgcq__searchInput\",\n  \"section\": \"TaskManager-module__CKmgcq__section\",\n  \"sectionHeader\": \"TaskManager-module__CKmgcq__sectionHeader\",\n  \"selected\": \"TaskManager-module__CKmgcq__selected\",\n  \"slideIn\": \"TaskManager-module__CKmgcq__slideIn\",\n  \"tab\": \"TaskManager-module__CKmgcq__tab\",\n  \"tabCount\": \"TaskManager-module__CKmgcq__tabCount\",\n  \"tabs\": \"TaskManager-module__CKmgcq__tabs\",\n  \"tag\": \"TaskManager-module__CKmgcq__tag\",\n  \"tagIcon\": \"TaskManager-module__CKmgcq__tagIcon\",\n  \"tagList\": \"TaskManager-module__CKmgcq__tagList\",\n  \"tagsList\": \"TaskManager-module__CKmgcq__tagsList\",\n  \"taskActions\": \"TaskManager-module__CKmgcq__taskActions\",\n  \"taskCard\": \"TaskManager-module__CKmgcq__taskCard\",\n  \"taskCardContent\": \"TaskManager-module__CKmgcq__taskCardContent\",\n  \"taskCheckbox\": \"TaskManager-module__CKmgcq__taskCheckbox\",\n  \"taskContent\": \"TaskManager-module__CKmgcq__taskContent\",\n  \"taskDetail\": \"TaskManager-module__CKmgcq__taskDetail\",\n  \"taskDetails\": \"TaskManager-module__CKmgcq__taskDetails\",\n  \"taskInput\": \"TaskManager-module__CKmgcq__taskInput\",\n  \"taskItem\": \"TaskManager-module__CKmgcq__taskItem\",\n  \"taskList\": \"TaskManager-module__CKmgcq__taskList\",\n  \"taskNotes\": \"TaskManager-module__CKmgcq__taskNotes\",\n  \"taskTags\": \"TaskManager-module__CKmgcq__taskTags\",\n  \"taskTitle\": \"TaskManager-module__CKmgcq__taskTitle\",\n  \"taskTitleContainer\": \"TaskManager-module__CKmgcq__taskTitleContainer\",\n  \"weekDays\": \"TaskManager-module__CKmgcq__weekDays\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/components/Header/Header.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"avatar\": \"Header-module__gbg3bW__avatar\",\n  \"header\": \"Header-module__gbg3bW__header\",\n  \"headerContent\": \"Header-module__gbg3bW__headerContent\",\n  \"leftSection\": \"Header-module__gbg3bW__leftSection\",\n  \"logo\": \"Header-module__gbg3bW__logo\",\n  \"menuIcon\": \"Header-module__gbg3bW__menuIcon\",\n  \"menuItem\": \"Header-module__gbg3bW__menuItem\",\n  \"mobileActive\": \"Header-module__gbg3bW__mobileActive\",\n  \"mobileMenuButton\": \"Header-module__gbg3bW__mobileMenuButton\",\n  \"navLink\": \"Header-module__gbg3bW__navLink\",\n  \"navigation\": \"Header-module__gbg3bW__navigation\",\n  \"notificationBadge\": \"Header-module__gbg3bW__notificationBadge\",\n  \"notificationButton\": \"Header-module__gbg3bW__notificationButton\",\n  \"profileButton\": \"Header-module__gbg3bW__profileButton\",\n  \"profileMenu\": \"Header-module__gbg3bW__profileMenu\",\n  \"rightSection\": \"Header-module__gbg3bW__rightSection\",\n  \"searchBar\": \"Header-module__gbg3bW__searchBar\",\n  \"searchButton\": \"Header-module__gbg3bW__searchButton\",\n  \"searchInput\": \"Header-module__gbg3bW__searchInput\",\n  \"userInfo\": \"Header-module__gbg3bW__userInfo\",\n  \"userName\": \"Header-module__gbg3bW__userName\",\n  \"userProfile\": \"Header-module__gbg3bW__userProfile\",\n  \"userRole\": \"Header-module__gbg3bW__userRole\",\n  \"userSection\": \"Header-module__gbg3bW__userSection\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Dhruvi/system/my-app/src/app/components/Header/index.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport Link from 'next/link';\r\nimport styles from './Header.module.css';\r\n\r\ninterface User {\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\nexport default function Header() {\r\n  const router = useRouter();\r\n  const [showProfileMenu, setShowProfileMenu] = useState(false);\r\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Get the current user from localStorage\r\n    const getCurrentUser = () => {\r\n      const userEmail = localStorage.getItem('currentUserEmail');\r\n      if (userEmail) {\r\n        const users = JSON.parse(localStorage.getItem('users') || '[]');\r\n        const user = users.find((u: User) => u.email === userEmail);\r\n        if (user) {\r\n          setCurrentUser(user);\r\n        } else {\r\n          // If user not found, redirect to login\r\n          router.push('/login');\r\n        }\r\n      } else {\r\n        // If no current user email, redirect to login\r\n        router.push('/login');\r\n      }\r\n    };\r\n\r\n    getCurrentUser();\r\n  }, [router]);\r\n\r\n  // Close menus when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      const target = event.target as HTMLElement;\r\n      if (!target.closest(`.${styles.userProfile}`)) {\r\n        setShowProfileMenu(false);\r\n      }\r\n      if (!target.closest(`.${styles.mobileMenuButton}`) && !target.closest(`.${styles.navigation}`)) {\r\n        setShowMobileMenu(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('currentUserEmail');\r\n    router.push('/login');\r\n  };\r\n\r\n  // If user is not loaded yet, you might want to show a loading state\r\n  if (!currentUser) {\r\n    return null; // Or return a loading spinner\r\n  }\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.headerContent}>\r\n        <div className={styles.leftSection}>\r\n          <button \r\n            className={styles.mobileMenuButton}\r\n            onClick={() => setShowMobileMenu(!showMobileMenu)}\r\n            aria-label=\"Toggle menu\"\r\n          >\r\n            ☰\r\n          </button>\r\n          <h1 className={styles.logo}>Gamification</h1>\r\n          <nav className={`${styles.navigation} ${showMobileMenu ? styles.mobileActive : ''}`}>\r\n            <Link href=\"/tasks\" className={styles.navLink} onClick={() => setShowMobileMenu(false)}>\r\n              Tasks\r\n            </Link>\r\n          </nav>\r\n        </div>\r\n        \r\n        <div className={styles.rightSection}>\r\n          <div className={styles.searchBar}>\r\n            <input \r\n              type=\"search\" \r\n              placeholder=\"Search tasks...\" \r\n              className={styles.searchInput}\r\n            />\r\n            <button className={styles.searchButton} aria-label=\"Search\">\r\n              🔍\r\n            </button>\r\n          </div>\r\n          \r\n          <div className={styles.userSection}>\r\n            <button className={styles.notificationButton} aria-label=\"Notifications\">\r\n              🔔\r\n              <span className={styles.notificationBadge}>3</span>\r\n            </button>\r\n            <div className={styles.userProfile}>\r\n              <button \r\n                className={styles.profileButton}\r\n                onClick={() => setShowProfileMenu(!showProfileMenu)}\r\n                aria-label=\"User menu\"\r\n              >\r\n                <div className={styles.avatar}>\r\n                  👤\r\n                </div>\r\n                <div className={styles.userInfo}>\r\n                  <span className={styles.userName}>{currentUser.username}</span>\r\n                  <span className={styles.userRole}>Premium User</span>\r\n                </div>\r\n              </button>\r\n              \r\n              {showProfileMenu && (\r\n                <div className={styles.profileMenu}>\r\n                  <Link \r\n                    href=\"/profile\" \r\n                    className={styles.menuItem}\r\n                    onClick={() => setShowProfileMenu(false)}\r\n                  >\r\n                    <span className={styles.menuIcon}>👤</span>\r\n                    My Profile\r\n                  </Link>\r\n                  <button \r\n                    className={styles.menuItem}\r\n                    onClick={handleLogout}\r\n                  >\r\n                    <span className={styles.menuIcon}>🚪</span>\r\n                    Logout\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/components/Footer/Footer.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"copyright\": \"Footer-module__8-teKW__copyright\",\n  \"donateButton\": \"Footer-module__8-teKW__donateButton\",\n  \"footer\": \"Footer-module__8-teKW__footer\",\n  \"footerBottom\": \"Footer-module__8-teKW__footerBottom\",\n  \"footerBottomContent\": \"Footer-module__8-teKW__footerBottomContent\",\n  \"footerContent\": \"Footer-module__8-teKW__footerContent\",\n  \"footerSection\": \"Footer-module__8-teKW__footerSection\",\n  \"legalLinks\": \"Footer-module__8-teKW__legalLinks\",\n  \"socialLinks\": \"Footer-module__8-teKW__socialLinks\",\n  \"socialSection\": \"Footer-module__8-teKW__socialSection\",\n  \"supportSection\": \"Footer-module__8-teKW__supportSection\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Dhruvi/system/my-app/src/app/components/Footer/index.tsx"],"sourcesContent":["\"use client\";\r\nimport React from 'react';\r\nimport styles from './Footer.module.css';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className={styles.footer}>\r\n      <div className={styles.footerContent}>\r\n        <div className={styles.footerSection}>\r\n          <h3>Product</h3>\r\n          <nav>\r\n            <a href=\"#\">IOS App</a>\r\n            <a href=\"#\">Android App</a>\r\n            <a href=\"#\">Group Plans</a>\r\n            <a href=\"#\">How It Works</a>\r\n          </nav>\r\n        </div>\r\n\r\n        <div className={styles.footerSection}>\r\n          <h3>Company</h3>\r\n          <nav>\r\n            <a href=\"#\">Contact Us</a>\r\n            <a href=\"#\">Press Kit</a>\r\n            <a href=\"#\">Blog</a>\r\n            <a href=\"#\">News</a>\r\n          </nav>\r\n        </div>\r\n\r\n        <div className={styles.footerSection}>\r\n          <h3>Community</h3>\r\n          <nav>\r\n            <a href=\"#\">Community Guidelines</a>\r\n            <a href=\"#\">Hall of Heroes</a>\r\n            <a href=\"#\">Contributing to Habitica</a>\r\n            <a href=\"#\">Translate Habitica</a>\r\n          </nav>\r\n        </div>\r\n\r\n        <div className={styles.footerSection}>\r\n          <h3>Support</h3>\r\n          <nav>\r\n            <a href=\"#\">FAQ</a>\r\n            <a href=\"#\">Report a Bug</a>\r\n            <a href=\"#\">Request a Feature</a>\r\n          </nav>\r\n        </div>\r\n\r\n        <div className={styles.footerSection}>\r\n          <h3>Developers</h3>\r\n          <nav>\r\n            <a href=\"#\">API v3</a>\r\n            <a href=\"#\">Data Display Tool</a>\r\n            <a href=\"#\">Guidance for Blacksmiths</a>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.footerBottom}>\r\n        <div className={styles.footerBottomContent}>\r\n          <div className={styles.supportSection}>\r\n            <h3>Help Support Habitica</h3>\r\n            <p>Habitica is an open source project that depends on our users for support. The money you spend on gems helps us keep the servers running, maintain a small staff, develop new features, and provide incentives for our volunteers</p>\r\n            <button className={styles.donateButton}>\r\n              💜 Donate to Habitica\r\n            </button>\r\n          </div>\r\n\r\n          <div className={styles.socialSection}>\r\n            <h3>Social</h3>\r\n            <div className={styles.socialLinks}>\r\n              <a href=\"#\" aria-label=\"Instagram\">📷</a>\r\n              <a href=\"#\" aria-label=\"Twitter\">🐦</a>\r\n              <a href=\"#\" aria-label=\"Facebook\">📘</a>\r\n              <a href=\"#\" aria-label=\"Tumblr\">📝</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.copyright}>\r\n          <p>© 2023 Habitica. All rights reserved.</p>\r\n          <div className={styles.legalLinks}>\r\n            <a href=\"#\">Privacy Policy</a>\r\n            <a href=\"#\">Terms and Conditions</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 923, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Dhruvi/system/my-app/src/app/components/TaskManager.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"./TaskManager.module.css\";\nimport Header from \"./Header/index\";\nimport Footer from \"./Footer/index\";\nimport {\n  addTask,\n  updateTask,\n  deleteTask,\n  toggleTaskMenu,\n  setActiveTab,\n  setSearchQuery,\n} from \"../store/slices/tasksSlice\";\nimport type { StoreState } from \"../store/store\";\n\ninterface Notification {\n  id: number;\n  message: string;\n  type: \"gold\" | \"health\" | \"experience\";\n}\n\ninterface Task {\n  id: string;\n  title: string;\n  type: \"habit\" | \"daily\" | \"todo\";\n  notes?: string;\n  difficulty?: \"easy\" | \"medium\" | \"hard\";\n  completed?: boolean;\n  isEditing?: boolean;\n  showMenu?: boolean;\n  startDate?: string;\n  repeats?: string;\n  repeatEvery?: number;\n  repeatOn?: string[];\n  tags?: string[];\n  dueDate?: string;\n  checklist?: string[];\n  habitType?: \"positive\" | \"negative\";\n  userId: string;\n}\n\ninterface TaskTypeOption {\n  type: \"habit\" | \"daily\" | \"todo\";\n  label: string;\n  icon: string;\n}\n\ntype Difficulty = \"easy\" | \"medium\" | \"hard\";\n\nexport default function TaskManager() {\n  const dispatch = useDispatch();\n  const [currentUserEmail, setCurrentUserEmail] = useState<string | null>(null);\n  const tasks = useSelector((state: StoreState) => state.tasks.tasks) || [];\n  const activeTab = useSelector((state: StoreState) => state.tasks.activeTab);\n  const searchQuery = useSelector(\n    (state: StoreState) => state.tasks.searchQuery\n  );\n\n  // Move localStorage access to useEffect\n  useEffect(() => {\n    const userEmail = localStorage.getItem(\"currentUserEmail\");\n    setCurrentUserEmail(userEmail);\n  }, []);\n\n  // Filter tasks for current user\n  const userTasks = tasks.filter(\n    (task: Task) => task.userId === currentUserEmail\n  );\n\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [showHabitModal, setShowHabitModal] = useState(false);\n  const [showDailyModal, setShowDailyModal] = useState(false);\n  const [showTodoModal, setShowTodoModal] = useState(false);\n  const [showEditHabitModal, setShowEditHabitModal] = useState(false);\n  const [editingHabit, setEditingHabit] = useState<Task | null>(null);\n  const [showEditDailyModal, setShowEditDailyModal] = useState(false);\n  const [editingDaily, setEditingDaily] = useState<Task | null>(null);\n  const [showEditTodoModal, setShowEditTodoModal] = useState(false);\n  const [editingTodo, setEditingTodo] = useState<Task | null>(null);\n\n  const [newHabit, setNewHabit] = useState({\n    title: \"\",\n    notes: \"\",\n    difficulty: \"easy\" as Difficulty,\n    habitType: \"\" as \"positive\" | \"negative\" | \"\",\n  });\n\n  const [newDaily, setNewDaily] = useState({\n    title: \"\",\n    notes: \"\",\n    difficulty: \"easy\" as Difficulty,\n    startDate: new Date().toISOString().split(\"T\")[0],\n    repeats: \"weekly\",\n    repeatEvery: 1,\n    repeatOn: [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\n    tags: [] as string[],\n  });\n\n  const [newTodo, setNewTodo] = useState({\n    title: \"\",\n    notes: \"\",\n    difficulty: \"easy\" as Difficulty,\n    checklist: [] as string[],\n    dueDate: \"\",\n    tags: [] as string[],\n  });\n\n  const popupRef = useRef<HTMLDivElement>(null);\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  const taskTypes: TaskTypeOption[] = [\n    { type: \"habit\", label: \"Habit\", icon: \"⚖️\" },\n    { type: \"daily\", label: \"Daily\", icon: \"📅\" },\n    { type: \"todo\", label: \"To Do\", icon: \"✓\" },\n  ];\n\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n\n  useEffect(() => {\n    setIsInitialized(true);\n  }, []);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        popupRef.current &&\n        !popupRef.current.contains(event.target as Node)\n      ) {\n        setIsPopupOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  const handleCreateHabit = () => {\n    if (!newHabit.title.trim() || !newHabit.habitType || !currentUserEmail)\n      return;\n\n    const habit: Task = {\n      id: Math.random().toString(36).substr(2, 9),\n      userId: currentUserEmail,\n      title: newHabit.title.trim(),\n      notes: newHabit.notes || \"\",\n      difficulty: newHabit.difficulty || \"easy\",\n      type: \"habit\",\n      completed: false,\n      habitType: newHabit.habitType,\n    };\n\n    dispatch(addTask(habit));\n    setNewHabit({ title: \"\", notes: \"\", difficulty: \"easy\", habitType: \"\" });\n    setShowHabitModal(false);\n    dispatch(setActiveTab(\"habits\"));\n  };\n\n  const handleCreateDaily = () => {\n    if (!newDaily.title.trim() || !currentUserEmail) return;\n\n    const daily: Task = {\n      id: Math.random().toString(36).substr(2, 9),\n      userId: currentUserEmail,\n      title: newDaily.title.trim(),\n      notes: newDaily.notes || \"\",\n      difficulty: newDaily.difficulty || \"easy\",\n      type: \"daily\",\n      completed: false,\n      startDate: newDaily.startDate || new Date().toISOString().split(\"T\")[0],\n      repeats: newDaily.repeats || \"weekly\",\n      repeatEvery: Number(newDaily.repeatEvery) || 1,\n      repeatOn: Array.isArray(newDaily.repeatOn)\n        ? newDaily.repeatOn\n        : [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\n      tags: Array.isArray(newDaily.tags) ? newDaily.tags : [],\n    };\n\n    dispatch(addTask(daily));\n    setNewDaily({\n      title: \"\",\n      notes: \"\",\n      difficulty: \"easy\",\n      startDate: new Date().toISOString().split(\"T\")[0],\n      repeats: \"weekly\",\n      repeatEvery: 1,\n      repeatOn: [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\n      tags: [],\n    });\n    setShowDailyModal(false);\n    dispatch(setActiveTab(\"dailies\"));\n  };\n\n  const handleCreateTodo = () => {\n    if (!newTodo.title.trim() || !currentUserEmail) return;\n\n    const todo: Task = {\n      id: Math.random().toString(36).substr(2, 9),\n      userId: currentUserEmail,\n      title: newTodo.title.trim(),\n      notes: newTodo.notes || \"\",\n      difficulty: newTodo.difficulty || \"easy\",\n      type: \"todo\",\n      completed: false,\n      dueDate: newTodo.dueDate || \"\",\n      checklist: Array.isArray(newTodo.checklist) ? newTodo.checklist : [],\n      tags: Array.isArray(newTodo.tags) ? newTodo.tags : [],\n    };\n\n    dispatch(addTask(todo));\n    setNewTodo({\n      title: \"\",\n      notes: \"\",\n      difficulty: \"easy\",\n      checklist: [],\n      dueDate: \"\",\n      tags: [],\n    });\n    setShowTodoModal(false);\n    dispatch(setActiveTab(\"todos\"));\n  };\n\n  const updateTaskTitle = (taskId: string, newTitle: string) => {\n    const task = userTasks.find((t: Task) => t.id === taskId);\n    if (task) {\n      dispatch(updateTask({ ...task, title: newTitle || \"\" }));\n    }\n  };\n\n  const handleDeleteTask = (taskId: string) => {\n    dispatch(deleteTask(taskId));\n  };\n\n  const handleToggleTaskMenu = (taskId: string, show: boolean) => {\n    dispatch(toggleTaskMenu({ taskId, show }));\n  };\n\n  const handleEditTask = (taskId: string) => {\n    const taskToEdit = userTasks.find((task: Task) => task.id === taskId);\n    if (taskToEdit) {\n      if (taskToEdit.type === \"habit\") {\n        setEditingHabit(taskToEdit);\n        setShowEditHabitModal(true);\n      } else if (taskToEdit.type === \"daily\") {\n        setEditingDaily(taskToEdit);\n        setShowEditDailyModal(true);\n      } else if (taskToEdit.type === \"todo\") {\n        setEditingTodo(taskToEdit);\n        setShowEditTodoModal(true);\n      }\n    }\n  };\n\n  const handleSaveHabitEdit = () => {\n    if (editingHabit) {\n      dispatch(updateTask(editingHabit));\n      setShowEditHabitModal(false);\n      setEditingHabit(null);\n    }\n  };\n\n  const handleDeleteHabit = (taskId: string) => {\n    if (window.confirm(\"Are you sure you want to delete this habit?\")) {\n      dispatch(deleteTask(taskId));\n      setShowEditHabitModal(false);\n      setEditingHabit(null);\n    }\n  };\n\n  const handleSaveDailyEdit = () => {\n    if (editingDaily) {\n      dispatch(updateTask(editingDaily));\n      setShowEditDailyModal(false);\n      setEditingDaily(null);\n    }\n  };\n\n  const handleDeleteDaily = (taskId: string) => {\n    if (window.confirm(\"Are you sure you want to delete this daily?\")) {\n      dispatch(deleteTask(taskId));\n      setShowEditDailyModal(false);\n      setEditingDaily(null);\n    }\n  };\n\n  const handleSaveTodoEdit = () => {\n    if (editingTodo) {\n      dispatch(updateTask(editingTodo));\n      setShowEditTodoModal(false);\n      setEditingTodo(null);\n    }\n  };\n\n  const handleDeleteTodo = (taskId: string) => {\n    if (window.confirm(\"Are you sure you want to delete this todo?\")) {\n      dispatch(deleteTask(taskId));\n      setShowEditTodoModal(false);\n      setEditingTodo(null);\n    }\n  };\n\n  const filteredTasks = Array.isArray(userTasks)\n    ? userTasks.filter((task) => {\n        const matchesType =\n          activeTab === \"habits\"\n            ? task.type === \"habit\"\n            : activeTab === \"dailies\"\n            ? task.type === \"daily\"\n            : task.type === \"todo\";\n\n        const searchLower = searchQuery.toLowerCase();\n        const matchesSearch =\n          searchQuery === \"\" ||\n          task.title.toLowerCase().includes(searchLower) ||\n          (task.notes && task.notes.toLowerCase().includes(searchLower));\n        return matchesType && matchesSearch;\n      })\n    : [];\n\n  const showNotification = (\n    message: string,\n    type: \"gold\" | \"health\" | \"experience\"\n  ) => {\n    const id = Date.now() + Math.random(); // Ensure unique IDs for simultaneous notifications\n    const newNotification = { id, message, type };\n    setNotifications((prev) => [...prev, newNotification]);\n\n    setTimeout(() => {\n      setNotifications((prev) =>\n        prev.filter((notification) => notification.id !== id)\n      );\n    }, 3000);\n  };\n\n  // Add this before the return statement\n  const dailiesCount = userTasks.filter(\n    (task: Task) => task.type === \"daily\"\n  ).length;\n\n  if (!isInitialized) {\n    return <div className={styles.loading}>Loading...</div>;\n  }\n\n  return (\n    <div className={styles.pageWrapper}>\n      <Header />\n      <div className={styles.mainContainer}>\n        <div className={styles.notificationContainer}>\n          {notifications.map((notification) => (\n            <div\n              key={notification.id}\n              className={`${styles.notification} ${\n                notification.type === \"health\"\n                  ? styles.healthNotification\n                  : notification.type === \"experience\"\n                  ? styles.experienceNotification\n                  : \"\"\n              }`}\n              data-type={notification.type}\n            >\n              {notification.type === \"gold\" && (\n                <span className={styles.goldIcon}>💰</span>\n              )}\n              {notification.type === \"health\" && (\n                <span className={styles.healthIcon}>❤️</span>\n              )}\n              {notification.type === \"experience\" && (\n                <span className={styles.experienceIcon}>⭐</span>\n              )}\n              {notification.message}\n            </div>\n          ))}\n        </div>\n        <div className={styles.container}>\n          <div className={styles.header}>\n            <div className={styles.searchContainer}>\n              <input\n                type=\"text\"\n                placeholder=\"Search tasks...\"\n                className={styles.searchInput}\n                value={searchQuery}\n                onChange={(e) => dispatch(setSearchQuery(e.target.value))}\n              />\n              {searchQuery && (\n                <button\n                  className={styles.clearSearch}\n                  onClick={() => dispatch(setSearchQuery(\"\"))}\n                >\n                  ×\n                </button>\n              )}\n            </div>\n            <div className={styles.addTaskContainer}>\n              <button\n                className={styles.addTaskButton}\n                onClick={() => setIsPopupOpen(!isPopupOpen)}\n              >\n                + Add Task\n              </button>\n              {isPopupOpen && (\n                <div className={styles.popup} ref={popupRef}>\n                  {taskTypes.map((taskType) => (\n                    <button\n                      key={taskType.type}\n                      className={styles.popupOption}\n                      onClick={() => {\n                        if (taskType.type === \"habit\") {\n                          setShowHabitModal(true);\n                        } else if (taskType.type === \"daily\") {\n                          setShowDailyModal(true);\n                        } else if (taskType.type === \"todo\") {\n                          setShowTodoModal(true);\n                        }\n                        setIsPopupOpen(false);\n                      }}\n                    >\n                      <span className={styles.optionIcon}>{taskType.icon}</span>\n                      <span>{taskType.label}</span>\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {showHabitModal && (\n            <div className={styles.modalOverlay}>\n              <div className={styles.modal} ref={modalRef}>\n                <div className={styles.modalHeader}>\n                  <h2>Create Habit</h2>\n                  <div className={styles.modalActions}>\n                    <button\n                      className={styles.cancelButton}\n                      onClick={() => setShowHabitModal(false)}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      className={styles.createButton}\n                      onClick={handleCreateHabit}\n                      disabled={!newHabit.title.trim() || !newHabit.habitType}\n                    >\n                      Create\n                    </button>\n                  </div>\n                </div>\n\n                <div className={styles.modalContent}>\n                  <div className={styles.formGroup}>\n                    <label>Title*</label>\n                    <input\n                      type=\"text\"\n                      value={newHabit.title}\n                      onChange={(e) =>\n                        setNewHabit({ ...newHabit, title: e.target.value })\n                      }\n                      placeholder=\"Add a title\"\n                      className={styles.modalInput}\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Notes</label>\n                    <textarea\n                      value={newHabit.notes}\n                      onChange={(e) =>\n                        setNewHabit({ ...newHabit, notes: e.target.value })\n                      }\n                      placeholder=\"Add notes\"\n                      className={styles.modalTextarea}\n                      rows={4}\n                    />\n                  </div>\n\n                  <div className={styles.habitTypeSelection}>\n                    <div className={styles.habitTypeButton}>\n                      <button\n                        className={`${styles.circleButton} ${\n                          styles.positiveButton\n                        } ${\n                          newHabit.habitType === \"positive\"\n                            ? styles.selected\n                            : \"\"\n                        }`}\n                        onClick={() =>\n                          setNewHabit({ ...newHabit, habitType: \"positive\" })\n                        }\n                        type=\"button\"\n                      >\n                        +\n                      </button>\n                      <span className={styles.buttonLabel}>Positive</span>\n                    </div>\n                    <div className={styles.habitTypeButton}>\n                      <button\n                        className={`${styles.circleButton} ${\n                          styles.negativeButton\n                        } ${\n                          newHabit.habitType === \"negative\"\n                            ? styles.selected\n                            : \"\"\n                        }`}\n                        onClick={() =>\n                          setNewHabit({ ...newHabit, habitType: \"negative\" })\n                        }\n                        type=\"button\"\n                      >\n                        −\n                      </button>\n                      <span className={styles.buttonLabel}>Negative</span>\n                    </div>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Difficulty</label>\n                    <select\n                      value={newHabit.difficulty}\n                      onChange={(e) =>\n                        setNewHabit({\n                          ...newHabit,\n                          difficulty: e.target.value as\n                            | \"easy\"\n                            | \"medium\"\n                            | \"hard\",\n                        })\n                      }\n                      className={styles.modalSelect}\n                    >\n                      <option value=\"easy\">Easy</option>\n                      <option value=\"medium\">Medium</option>\n                      <option value=\"hard\">Hard</option>\n                    </select>\n                  </div>\n\n                  <button\n                    className={styles.createButton}\n                    onClick={handleCreateHabit}\n                    disabled={!newHabit.title.trim() || !newHabit.habitType}\n                  >\n                    Create\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {showDailyModal && (\n            <div className={styles.modalOverlay}>\n              <div className={styles.modal} ref={modalRef}>\n                <div className={styles.modalHeader}>\n                  <h2>Create Daily</h2>\n                  <div className={styles.modalActions}>\n                    <button\n                      className={styles.cancelButton}\n                      onClick={() => setShowDailyModal(false)}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      className={styles.createButton}\n                      onClick={handleCreateDaily}\n                      disabled={!newDaily.title.trim()}\n                    >\n                      Create\n                    </button>\n                  </div>\n                </div>\n\n                <div className={styles.modalContent}>\n                  <div className={styles.formGroup}>\n                    <label>Title*</label>\n                    <input\n                      type=\"text\"\n                      value={newDaily.title}\n                      onChange={(e) =>\n                        setNewDaily({ ...newDaily, title: e.target.value })\n                      }\n                      placeholder=\"Add a title\"\n                      className={styles.modalInput}\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Notes</label>\n                    <textarea\n                      value={newDaily.notes}\n                      onChange={(e) =>\n                        setNewDaily({ ...newDaily, notes: e.target.value })\n                      }\n                      placeholder=\"Add notes\"\n                      className={styles.modalTextarea}\n                      rows={4}\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Start Date</label>\n                    <input\n                      type=\"date\"\n                      value={newDaily.startDate}\n                      onChange={(e) =>\n                        setNewDaily({ ...newDaily, startDate: e.target.value })\n                      }\n                      className={styles.modalInput}\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Repeats</label>\n                    <select\n                      value={newDaily.repeats}\n                      onChange={(e) =>\n                        setNewDaily({ ...newDaily, repeats: e.target.value })\n                      }\n                      className={styles.modalSelect}\n                    >\n                      <option value=\"daily\">Daily</option>\n                      <option value=\"weekly\">Weekly</option>\n                      <option value=\"monthly\">Monthly</option>\n                    </select>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Repeat Every</label>\n                    <div className={styles.repeatEveryContainer}>\n                      <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={newDaily.repeatEvery}\n                        onChange={(e) =>\n                          setNewDaily({\n                            ...newDaily,\n                            repeatEvery: parseInt(e.target.value),\n                          })\n                        }\n                        className={styles.modalInput}\n                      />\n                      <span>Week</span>\n                    </div>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Repeat On</label>\n                    <div className={styles.weekDays}>\n                      {[\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"].map((day) => (\n                        <button\n                          key={day}\n                          className={`${styles.dayButton} ${\n                            newDaily.repeatOn.includes(day)\n                              ? styles.selected\n                              : \"\"\n                          }`}\n                          onClick={() => {\n                            const newRepeatOn = newDaily.repeatOn.includes(day)\n                              ? newDaily.repeatOn.filter((d) => d !== day)\n                              : [...newDaily.repeatOn, day];\n                            setNewDaily({ ...newDaily, repeatOn: newRepeatOn });\n                          }}\n                        >\n                          {day}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Difficulty</label>\n                    <select\n                      value={newDaily.difficulty}\n                      onChange={(e) =>\n                        setNewDaily({\n                          ...newDaily,\n                          difficulty: e.target.value as Difficulty,\n                        })\n                      }\n                      className={styles.modalSelect}\n                    >\n                      <option value=\"easy\">Easy</option>\n                      <option value=\"medium\">Medium</option>\n                      <option value=\"hard\">Hard</option>\n                    </select>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Tags</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Add tags...\"\n                      className={styles.modalInput}\n                      onKeyDown={(e) => {\n                        if (e.key === \"Enter\" && e.currentTarget.value.trim()) {\n                          setNewDaily({\n                            ...newDaily,\n                            tags: [\n                              ...newDaily.tags,\n                              e.currentTarget.value.trim(),\n                            ],\n                          });\n                          e.currentTarget.value = \"\";\n                        }\n                      }}\n                    />\n                  </div>\n\n                  <button\n                      className={styles.createButton}\n                      onClick={handleCreateDaily}\n                      disabled={!newDaily.title.trim()}\n                    >\n                      Create\n                    </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {showTodoModal && (\n            <div className={styles.modalOverlay}>\n              <div className={styles.modal} ref={modalRef}>\n                <div className={styles.modalHeader}>\n                  <h2>Create To Do</h2>\n                  <div className={styles.modalActions}>\n                    <button\n                      className={styles.cancelButton}\n                      onClick={() => setShowTodoModal(false)}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      className={styles.createButton}\n                      onClick={handleCreateTodo}\n                      disabled={!newTodo.title.trim()}\n                    >\n                      Create\n                    </button>\n                  </div>\n                </div>\n\n                <div className={styles.modalContent}>\n                  <div className={styles.formGroup}>\n                    <label>Title*</label>\n                    <input\n                      type=\"text\"\n                      value={newTodo.title}\n                      onChange={(e) =>\n                        setNewTodo({ ...newTodo, title: e.target.value })\n                      }\n                      placeholder=\"Add a title\"\n                      className={styles.modalInput}\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Notes</label>\n                    <textarea\n                      value={newTodo.notes}\n                      onChange={(e) =>\n                        setNewTodo({ ...newTodo, notes: e.target.value })\n                      }\n                      placeholder=\"Add notes\"\n                      className={styles.modalTextarea}\n                      rows={4}\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Checklist</label>\n                    <div className={styles.checklistContainer}>\n                      <button\n                        className={styles.addChecklistItem}\n                        onClick={() => {\n                          const item = prompt(\"Enter checklist item:\");\n                          if (item?.trim()) {\n                            setNewTodo({\n                              ...newTodo,\n                              checklist: [...newTodo.checklist, item.trim()],\n                            });\n                          }\n                        }}\n                      >\n                        + New checklist item\n                      </button>\n                      {newTodo.checklist.map((item, index) => (\n                        <div key={index} className={styles.checklistItem}>\n                          <span>{item}</span>\n                          <button\n                            onClick={() => {\n                              setNewTodo({\n                                ...newTodo,\n                                checklist: newTodo.checklist.filter(\n                                  (_, i) => i !== index\n                                ),\n                              });\n                            }}\n                            className={styles.removeChecklistItem}\n                          >\n                            ×\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Difficulty</label>\n                    <select\n                      value={newTodo.difficulty}\n                      onChange={(e) =>\n                        setNewTodo({\n                          ...newTodo,\n                          difficulty: e.target.value as Difficulty,\n                        })\n                      }\n                      className={styles.modalSelect}\n                    >\n                      <option value=\"easy\">Easy</option>\n                      <option value=\"medium\">Medium</option>\n                      <option value=\"hard\">Hard</option>\n                    </select>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Due Date</label>\n                    <input\n                      type=\"date\"\n                      value={newTodo.dueDate}\n                      onChange={(e) =>\n                        setNewTodo({ ...newTodo, dueDate: e.target.value })\n                      }\n                      className={styles.modalInput}\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Tags</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Add tags...\"\n                      className={styles.modalInput}\n                      onKeyDown={(e) => {\n                        if (e.key === \"Enter\" && e.currentTarget.value.trim()) {\n                          setNewTodo({\n                            ...newTodo,\n                            tags: [\n                              ...newTodo.tags,\n                              e.currentTarget.value.trim(),\n                            ],\n                          });\n                          e.currentTarget.value = \"\";\n                        }\n                      }}\n                    />\n                    {newTodo.tags.length > 0 && (\n                      <div className={styles.tagList}>\n                        {newTodo.tags.map((tag, index) => (\n                          <span key={index} className={styles.tag}>\n                            {tag}\n                            <button\n                              onClick={() => {\n                                setNewTodo({\n                                  ...newTodo,\n                                  tags: newTodo.tags.filter(\n                                    (_, i) => i !== index\n                                  ),\n                                });\n                              }}\n                              className={styles.removeTag}\n                            >\n                              ×\n                            </button>\n                          </span>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n\n                  <button\n                      className={styles.createButton}\n                      onClick={handleCreateTodo}\n                      disabled={!newTodo.title.trim()}\n                    >\n                      Create\n                    </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {showEditHabitModal && editingHabit && (\n            <div className={styles.modalOverlay}>\n              <div className={`${styles.modal} ${styles.editHabitModal}`}>\n                <div className={styles.modalHeader}>\n                  <h2>Edit Habit</h2>\n                  <div className={styles.modalActions}>\n                    <button\n                      className={styles.cancelButton}\n                      onClick={() => {\n                        setShowEditHabitModal(false);\n                        setEditingHabit(null);\n                      }}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      className={styles.saveButton}\n                      onClick={handleSaveHabitEdit}\n                      disabled={!editingHabit.title.trim()}\n                    >\n                      Save\n                    </button>\n                  </div>\n                </div>\n\n                <div className={styles.modalContent}>\n                  <div className={styles.formGroup}>\n                    <label>Title*</label>\n                    <input\n                      type=\"text\"\n                      value={editingHabit.title}\n                      onChange={(e) =>\n                        setEditingHabit({\n                          ...editingHabit,\n                          title: e.target.value,\n                        })\n                      }\n                      placeholder=\"Click here to edit this into a bad habit you'd like to quit\"\n                      className={styles.modalInput}\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Notes</label>\n                    <div className={styles.notesContainer}>\n                      <textarea\n                        value={editingHabit.notes}\n                        onChange={(e) =>\n                          setEditingHabit({\n                            ...editingHabit,\n                            notes: e.target.value,\n                          })\n                        }\n                        placeholder=\"Or delete from the edit screen\"\n                        className={styles.modalTextarea}\n                        rows={4}\n                      />\n                    </div>\n                  </div>\n\n                  <div className={styles.habitTypeSelection}>\n                    <div className={styles.habitTypeButton}>\n                      <button\n                        className={`${styles.circleButton} ${\n                          styles.positiveButton\n                        } ${\n                          editingHabit.habitType === \"positive\"\n                            ? styles.selected\n                            : \"\"\n                        }`}\n                        onClick={() =>\n                          setEditingHabit({\n                            ...editingHabit,\n                            habitType: \"positive\",\n                          })\n                        }\n                      >\n                        +\n                      </button>\n                      <span className={styles.buttonLabel}>Positive</span>\n                    </div>\n                    <div className={styles.habitTypeButton}>\n                      <button\n                        className={`${styles.circleButton} ${\n                          styles.negativeButton\n                        } ${\n                          editingHabit.habitType === \"negative\"\n                            ? styles.selected\n                            : \"\"\n                        }`}\n                        onClick={() =>\n                          setEditingHabit({\n                            ...editingHabit,\n                            habitType: \"negative\",\n                          })\n                        }\n                      >\n                        −\n                      </button>\n                      <span className={styles.buttonLabel}>Negative</span>\n                    </div>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>\n                      Difficulty\n                      <span className={styles.infoIcon}>ⓘ</span>\n                    </label>\n                    <select\n                      value={editingHabit.difficulty}\n                      onChange={(e) =>\n                        setEditingHabit({\n                          ...editingHabit,\n                          difficulty: e.target.value as Difficulty,\n                        })\n                      }\n                      className={styles.modalSelect}\n                    >\n                      <option value=\"easy\">Easy ★★</option>\n                      <option value=\"medium\">Medium ★★★</option>\n                      <option value=\"hard\">Hard ★★★★</option>\n                    </select>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Tags</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Add tags...\"\n                      className={styles.modalInput}\n                      onKeyDown={(e) => {\n                        if (e.key === \"Enter\" && e.currentTarget.value.trim()) {\n                          setEditingHabit({\n                            ...editingHabit,\n                            tags: [\n                              ...(editingHabit.tags || []),\n                              e.currentTarget.value.trim(),\n                            ],\n                          });\n                          e.currentTarget.value = \"\";\n                        }\n                      }}\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Reset Counter</label>\n                    <select className={styles.modalSelect} defaultValue=\"daily\">\n                      <option value=\"daily\">Daily</option>\n                    </select>\n                  </div>\n\n                  <div className={styles.deleteHabitContainer}>\n                    <button\n                      className={styles.deleteHabitButton}\n                      onClick={() => handleDeleteHabit(editingHabit.id)}\n                    >\n                      <span className={styles.deleteIcon}>🗑</span>\n                      Delete this Habit\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {showEditDailyModal && editingDaily && (\n            <div className={styles.modalOverlay}>\n              <div className={`${styles.modal} ${styles.editDailyModal}`}>\n                <div className={styles.modalHeader}>\n                  <h2>Edit Daily</h2>\n                  <div className={styles.modalActions}>\n                    <button\n                      className={styles.cancelButton}\n                      onClick={() => {\n                        setShowEditDailyModal(false);\n                        setEditingDaily(null);\n                      }}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      className={styles.saveButton}\n                      onClick={handleSaveDailyEdit}\n                      disabled={!editingDaily.title.trim()}\n                    >\n                      Save\n                    </button>\n                  </div>\n                </div>\n\n                <div className={styles.modalContent}>\n                  <div className={styles.formGroup}>\n                    <label>Title*</label>\n                    <input\n                      type=\"text\"\n                      value={editingDaily.title}\n                      onChange={(e) =>\n                        setEditingDaily({\n                          ...editingDaily,\n                          title: e.target.value,\n                        })\n                      }\n                      className={styles.modalInput}\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Notes</label>\n                    <textarea\n                      value={editingDaily.notes}\n                      onChange={(e) =>\n                        setEditingDaily({\n                          ...editingDaily,\n                          notes: e.target.value,\n                        })\n                      }\n                      className={styles.modalTextarea}\n                      rows={4}\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Checklist</label>\n                    <div className={styles.checklistContainer}>\n                      {editingDaily.checklist?.map((item, index) => (\n                        <div key={index} className={styles.checklistItem}>\n                          <label className={styles.checklistLabel}>\n                            <input\n                              type=\"checkbox\"\n                              checked={true}\n                              onChange={() => {}}\n                              className={styles.checklistCheckbox}\n                            />\n                            <span>{item}</span>\n                          </label>\n                        </div>\n                      ))}\n                      <button\n                        className={styles.addChecklistItem}\n                        onClick={() => {\n                          const item = prompt(\"Enter checklist item:\");\n                          if (item?.trim()) {\n                            setEditingDaily({\n                              ...editingDaily,\n                              checklist: [\n                                ...(editingDaily.checklist || []),\n                                item.trim(),\n                              ],\n                            });\n                          }\n                        }}\n                      >\n                        + New checklist item\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>\n                      Difficulty\n                      <span className={styles.infoIcon}>ⓘ</span>\n                    </label>\n                    <select\n                      value={editingDaily.difficulty}\n                      onChange={(e) =>\n                        setEditingDaily({\n                          ...editingDaily,\n                          difficulty: e.target.value as Difficulty,\n                        })\n                      }\n                      className={styles.modalSelect}\n                    >\n                      <option value=\"easy\">Easy ★★</option>\n                      <option value=\"medium\">Medium ★★★</option>\n                      <option value=\"hard\">Hard ★★★★</option>\n                    </select>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Start Date</label>\n                    <input\n                      type=\"date\"\n                      value={editingDaily.startDate || \"\"}\n                      onChange={(e) =>\n                        setEditingDaily({\n                          ...editingDaily,\n                          startDate: e.target.value,\n                        })\n                      }\n                      className={styles.modalInput}\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Repeats</label>\n                    <select\n                      value={editingDaily.repeats || \"monthly\"}\n                      onChange={(e) =>\n                        setEditingDaily({\n                          ...editingDaily,\n                          repeats: e.target.value,\n                        })\n                      }\n                      className={styles.modalSelect}\n                    >\n                      <option value=\"daily\">Daily</option>\n                      <option value=\"weekly\">Weekly</option>\n                      <option value=\"monthly\">Monthly</option>\n                    </select>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Repeat Every</label>\n                    <div className={styles.repeatEveryContainer}>\n                      <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={editingDaily.repeatEvery || 1}\n                        onChange={(e) =>\n                          setEditingDaily({\n                            ...editingDaily,\n                            repeatEvery: parseInt(e.target.value),\n                          })\n                        }\n                        className={styles.modalInput}\n                      />\n                      <span>Months</span>\n                    </div>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Repeat On</label>\n                    <div className={styles.repeatOnOptions}>\n                      <label className={styles.radioLabel}>\n                        <input\n                          type=\"radio\"\n                          name=\"repeatOn\"\n                          value=\"dayOfMonth\"\n                          checked={editingDaily.repeatOn?.[0] === \"dayOfMonth\"}\n                          onChange={() =>\n                            setEditingDaily({\n                              ...editingDaily,\n                              repeatOn: [\"dayOfMonth\"],\n                            })\n                          }\n                        />\n                        Day of the Month\n                      </label>\n                      <label className={styles.radioLabel}>\n                        <input\n                          type=\"radio\"\n                          name=\"repeatOn\"\n                          value=\"dayOfWeek\"\n                          checked={editingDaily.repeatOn?.[0] === \"dayOfWeek\"}\n                          onChange={() =>\n                            setEditingDaily({\n                              ...editingDaily,\n                              repeatOn: [\"dayOfWeek\"],\n                            })\n                          }\n                        />\n                        Day of the Week\n                      </label>\n                    </div>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Tags</label>\n                    <div className={styles.tagsContainer}>\n                      {editingDaily.tags?.map((tag, index) => (\n                        <span key={index} className={styles.tag}>\n                          {tag}\n                          <button\n                            onClick={() => {\n                              setEditingDaily({\n                                ...editingDaily,\n                                tags: editingDaily.tags?.filter(\n                                  (_, i) => i !== index\n                                ),\n                              });\n                            }}\n                            className={styles.removeTag}\n                          >\n                            ×\n                          </button>\n                        </span>\n                      ))}\n                      <input\n                        type=\"text\"\n                        placeholder=\"Add tags...\"\n                        className={styles.modalInput}\n                        onKeyDown={(e) => {\n                          if (\n                            e.key === \"Enter\" &&\n                            e.currentTarget.value.trim()\n                          ) {\n                            setEditingDaily({\n                              ...editingDaily,\n                              tags: [\n                                ...(editingDaily.tags || []),\n                                e.currentTarget.value.trim(),\n                              ],\n                            });\n                            e.currentTarget.value = \"\";\n                          }\n                        }}\n                      />\n                    </div>\n                  </div>\n\n                  <div className={styles.deleteContainer}>\n                    <button\n                      className={styles.deleteButton}\n                      onClick={() => handleDeleteDaily(editingDaily.id)}\n                    >\n                      <span className={styles.deleteIcon}>🗑</span>\n                      Delete this Daily\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {showEditTodoModal && editingTodo && (\n            <div className={styles.modalOverlay}>\n              <div className={`${styles.modal} ${styles.editTodoModal}`}>\n                <div className={styles.modalHeader}>\n                  <h2>Edit To Do</h2>\n                  <div className={styles.modalActions}>\n                    <button\n                      className={styles.cancelButton}\n                      onClick={() => {\n                        setShowEditTodoModal(false);\n                        setEditingTodo(null);\n                      }}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      className={styles.saveButton}\n                      onClick={handleSaveTodoEdit}\n                      disabled={!editingTodo.title.trim()}\n                    >\n                      Save\n                    </button>\n                  </div>\n                </div>\n\n                <div className={styles.modalContent}>\n                  <div className={styles.formGroup}>\n                    <label>Title*</label>\n                    <input\n                      type=\"text\"\n                      value={editingTodo.title}\n                      onChange={(e) =>\n                        setEditingTodo({\n                          ...editingTodo,\n                          title: e.target.value,\n                        })\n                      }\n                      placeholder=\"Enter task title\"\n                      className={styles.modalInput}\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Notes</label>\n                    <textarea\n                      value={editingTodo.notes}\n                      onChange={(e) =>\n                        setEditingTodo({\n                          ...editingTodo,\n                          notes: e.target.value,\n                        })\n                      }\n                      placeholder=\"Enter task notes\"\n                      className={styles.modalTextarea}\n                      rows={4}\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Checklist</label>\n                    <div className={styles.checklistContainer}>\n                      {editingTodo.checklist?.map((item, index) => (\n                        <div key={index} className={styles.checklistItem}>\n                          <label className={styles.checklistLabel}>\n                            <input\n                              type=\"checkbox\"\n                              checked={true}\n                              onChange={() => {}}\n                              className={styles.checklistCheckbox}\n                            />\n                            <span>{item}</span>\n                          </label>\n                        </div>\n                      ))}\n                      <button\n                        className={styles.addChecklistItem}\n                        onClick={() => {\n                          const item = prompt(\"Enter checklist item:\");\n                          if (item?.trim()) {\n                            setEditingTodo({\n                              ...editingTodo,\n                              checklist: [\n                                ...(editingTodo.checklist || []),\n                                item.trim(),\n                              ],\n                            });\n                          }\n                        }}\n                      >\n                        + New checklist item\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Difficulty</label>\n                    <select\n                      value={editingTodo.difficulty}\n                      onChange={(e) =>\n                        setEditingTodo({\n                          ...editingTodo,\n                          difficulty: e.target.value as Difficulty,\n                        })\n                      }\n                      className={styles.modalSelect}\n                    >\n                      <option value=\"easy\">Easy</option>\n                      <option value=\"medium\">Medium</option>\n                      <option value=\"hard\">Hard</option>\n                    </select>\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Due Date</label>\n                    <input\n                      type=\"date\"\n                      value={editingTodo.dueDate}\n                      onChange={(e) =>\n                        setEditingTodo({\n                          ...editingTodo,\n                          dueDate: e.target.value,\n                        })\n                      }\n                      className={styles.modalInput}\n                    />\n                  </div>\n\n                  <div className={styles.formGroup}>\n                    <label>Tags</label>\n                    <div className={styles.tagsContainer}>\n                      {editingTodo.tags?.map((tag, index) => (\n                        <span key={index} className={styles.tag}>\n                          {tag}\n                          <button\n                            onClick={() => {\n                              setEditingTodo({\n                                ...editingTodo,\n                                tags: editingTodo.tags?.filter(\n                                  (_, i) => i !== index\n                                ),\n                              });\n                            }}\n                            className={styles.removeTag}\n                          >\n                            ×\n                          </button>\n                        </span>\n                      ))}\n                      <input\n                        type=\"text\"\n                        placeholder=\"Add tags...\"\n                        className={styles.modalInput}\n                        onKeyDown={(e) => {\n                          if (\n                            e.key === \"Enter\" &&\n                            e.currentTarget.value.trim()\n                          ) {\n                            setEditingTodo({\n                              ...editingTodo,\n                              tags: [\n                                ...(editingTodo.tags || []),\n                                e.currentTarget.value.trim(),\n                              ],\n                            });\n                            e.currentTarget.value = \"\";\n                          }\n                        }}\n                      />\n                    </div>\n                  </div>\n\n                  <div className={styles.deleteContainer}>\n                    <button\n                      className={styles.deleteButton}\n                      onClick={() => handleDeleteTodo(editingTodo.id)}\n                    >\n                      <span className={styles.deleteIcon}>🗑</span>\n                      Delete this To Do\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className={styles.tabs}>\n            <button\n              className={`${styles.tab} ${\n                activeTab === \"habits\" ? styles.active : \"\"\n              }`}\n              onClick={() => dispatch(setActiveTab(\"habits\"))}\n            >\n              Habits\n            </button>\n            <button\n              className={`${styles.tab} ${\n                activeTab === \"dailies\" ? styles.active : \"\"\n              }`}\n              onClick={() => dispatch(setActiveTab(\"dailies\"))}\n            >\n              Dailies\n              <span className={styles.tabCount}>{dailiesCount}</span>\n            </button>\n            <button\n              className={`${styles.tab} ${\n                activeTab === \"todos\" ? styles.active : \"\"\n              }`}\n              onClick={() => dispatch(setActiveTab(\"todos\"))}\n            >\n              To Dos\n            </button>\n          </div>\n\n          <div className={styles.content}>\n            <div className={styles.section}>\n              <div className={styles.taskList}>\n                {filteredTasks.map((task) => (\n                  <div key={task.id} className={styles.taskCard}>\n                    {task.type === \"habit\" && (\n                      <div className={styles.habitContainer}>\n                        <div className={styles.habitButtons}>\n                          <button\n                            className={`${styles.actionButton} ${\n                              styles.positiveButton\n                            } ${\n                              (\n                                task as Task & {\n                                  habitType: \"positive\" | \"negative\";\n                                }\n                              ).habitType === \"positive\"\n                                ? styles.active\n                                : styles.inactive\n                            }`}\n                            onClick={() => {\n                              const habitTask = task as Task & {\n                                habitType: \"positive\" | \"negative\";\n                              };\n                              if (habitTask.habitType === \"positive\") {\n                                dispatch(\n                                  updateTask({\n                                    ...task,\n                                    completed: true,\n                                  })\n                                );\n                                showNotification(\n                                  \"You gained 5 gold! ✨\",\n                                  \"gold\"\n                                );\n                              }\n                            }}\n                          >\n                            +\n                          </button>\n\n                          <div className={styles.taskCardContent}>\n                            <input\n                              type=\"text\"\n                              value={task.title}\n                              onChange={(e) =>\n                                updateTaskTitle(task.id, e.target.value)\n                              }\n                              placeholder=\"Enter habit title\"\n                              className={styles.taskTitle}\n                            />\n                            {task.notes && (\n                              <div className={styles.taskNotes}>\n                                {task.notes}\n                              </div>\n                            )}\n                            {task.tags && task.tags.length > 0 && (\n                              <div className={styles.taskTags}>\n                                <span className={styles.tagIcon}>🏷️</span>\n                                <div className={styles.tagsList}>\n                                  {task.tags.map(\n                                    (tag: string, index: number) => (\n                                      <span key={index} className={styles.tag}>\n                                        {tag}\n                                      </span>\n                                    )\n                                  )}\n                                </div>\n                              </div>\n                            )}\n                          </div>\n\n                          <button\n                            className={`${styles.actionButton} ${\n                              styles.negativeButton\n                            } ${\n                              (\n                                task as Task & {\n                                  habitType: \"positive\" | \"negative\";\n                                }\n                              ).habitType === \"negative\"\n                                ? styles.active\n                                : styles.inactive\n                            }`}\n                            onClick={() => {\n                              const habitTask = task as Task & {\n                                habitType: \"positive\" | \"negative\";\n                              };\n                              if (habitTask.habitType === \"negative\") {\n                                dispatch(\n                                  updateTask({\n                                    ...task,\n                                    completed: true,\n                                  })\n                                );\n                                showNotification(\n                                  \"You lost 5 health! ❤️\",\n                                  \"health\"\n                                );\n                              }\n                            }}\n                          >\n                            −\n                          </button>\n                        </div>\n\n                        <div className={styles.menuContainer}>\n                          <button\n                            className={styles.menuButton}\n                            onClick={() =>\n                              handleToggleTaskMenu(task.id, !task.showMenu)\n                            }\n                          >\n                            ⋮\n                          </button>\n                          {task.showMenu && (\n                            <div className={styles.menuDropdown}>\n                              <button\n                                className={styles.menuItem}\n                                onClick={() => handleEditTask(task.id)}\n                              >\n                                Edit\n                              </button>\n                              <button\n                                className={styles.menuItem}\n                                onClick={() => handleDeleteTask(task.id)}\n                              >\n                                Delete\n                              </button>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n\n                    {task.type === \"daily\" && (\n                      <>\n                        <div className={styles.taskCheckbox}>\n                          <input\n                            type=\"checkbox\"\n                            checked={task.completed}\n                            onChange={() => {\n                              dispatch(\n                                updateTask({\n                                  ...task,\n                                  completed: !task.completed,\n                                })\n                              );\n                              if (!task.completed) {\n                                // When checking the box\n                                showNotification(\n                                  \"You gained 10 gold! ✨\",\n                                  \"gold\"\n                                );\n                                setTimeout(() => {\n                                  showNotification(\n                                    \"You gained 20 experience! 📈\",\n                                    \"experience\"\n                                  );\n                                }, 300);\n                              } else {\n                                // When unchecking the box\n                                showNotification(\"You spent 10 gold\", \"gold\");\n                                setTimeout(() => {\n                                  showNotification(\n                                    \"You lost 20 experience\",\n                                    \"experience\"\n                                  );\n                                }, 300);\n                              }\n                            }}\n                          />\n                        </div>\n\n                        <div className={styles.taskCardContent}>\n                          <div className={styles.taskTitleContainer}>\n                            <span className={styles.taskTitle}>\n                              {task.title}\n                            </span>\n                            {task.notes && (\n                              <div className={styles.taskNotes}>\n                                {task.notes}\n                              </div>\n                            )}\n                            {task.tags && task.tags.length > 0 && (\n                              <div className={styles.taskTags}>\n                                <span className={styles.tagIcon}>🏷️</span>\n                                <div className={styles.tagsList}>\n                                  {task.tags.map(\n                                    (tag: string, index: number) => (\n                                      <span key={index} className={styles.tag}>\n                                        {tag}\n                                      </span>\n                                    )\n                                  )}\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n\n                        <div className={styles.menuContainer}>\n                          <button\n                            className={styles.menuButton}\n                            onClick={() =>\n                              handleToggleTaskMenu(task.id, !task.showMenu)\n                            }\n                          >\n                            ⋮\n                          </button>\n                          {task.showMenu && (\n                            <div className={styles.menuDropdown}>\n                              <button\n                                className={styles.menuItem}\n                                onClick={() => handleEditTask(task.id)}\n                              >\n                                Edit\n                              </button>\n                              <button\n                                className={styles.menuItem}\n                                onClick={() => handleDeleteTask(task.id)}\n                              >\n                                Delete\n                              </button>\n                            </div>\n                          )}\n                        </div>\n                      </>\n                    )}\n\n                    {task.type === \"todo\" && (\n                      <>\n                        <div className={styles.taskCheckbox}>\n                          <input\n                            type=\"checkbox\"\n                            checked={task.completed}\n                            onChange={() => {\n                              if (!task.completed) {\n                                // When checking the box\n                                showNotification(\n                                  \"You gained 15 gold! ✨\",\n                                  \"gold\"\n                                );\n                                setTimeout(() => {\n                                  showNotification(\n                                    \"You gained 25 experience! 📈\",\n                                    \"experience\"\n                                  );\n                                }, 300);\n\n                                // Remove the todo after a short delay to allow animations to complete\n                                setTimeout(() => {\n                                  dispatch(deleteTask(task.id));\n                                }, 1000);\n                              }\n                            }}\n                          />\n                        </div>\n\n                        <div className={styles.taskCardContent}>\n                          <div className={styles.taskTitleContainer}>\n                            <span className={styles.taskTitle}>\n                              {task.title}\n                            </span>\n                            {task.dueDate && (\n                              <span className={styles.dueDate}>\n                                Due:{\" \"}\n                                {new Date(task.dueDate).toLocaleDateString()}\n                              </span>\n                            )}\n                            {task.notes && (\n                              <div className={styles.taskNotes}>\n                                {task.notes}\n                              </div>\n                            )}\n                            {task.checklist && task.checklist.length > 0 && (\n                              <div className={styles.checklist}>\n                                {task.checklist.map(\n                                  (item: string, index: number) => (\n                                    <div\n                                      key={index}\n                                      className={styles.checklistItem}\n                                    >\n                                      <input\n                                        type=\"checkbox\"\n                                        className={styles.checklistCheckbox}\n                                      />\n                                      <span>{item}</span>\n                                    </div>\n                                  )\n                                )}\n                              </div>\n                            )}\n                            {task.tags && task.tags.length > 0 && (\n                              <div className={styles.taskTags}>\n                                <span className={styles.tagIcon}>🏷️</span>\n                                <div className={styles.tagsList}>\n                                  {task.tags.map(\n                                    (tag: string, index: number) => (\n                                      <span key={index} className={styles.tag}>\n                                        {tag}\n                                      </span>\n                                    )\n                                  )}\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n\n                        <div className={styles.menuContainer}>\n                          <button\n                            className={styles.menuButton}\n                            onClick={() =>\n                              handleToggleTaskMenu(task.id, !task.showMenu)\n                            }\n                          >\n                            ⋮\n                          </button>\n                          {task.showMenu && (\n                            <div className={styles.menuDropdown}>\n                              <button\n                                className={styles.menuItem}\n                                onClick={() => handleEditTask(task.id)}\n                              >\n                                Edit\n                              </button>\n                              <button\n                                className={styles.menuItem}\n                                onClick={() => handleDeleteTask(task.id)}\n                              >\n                                Delete\n                              </button>\n                            </div>\n                          )}\n                        </div>\n                      </>\n                    )}\n                  </div>\n                ))}\n\n                {filteredTasks.length === 0 && (\n                  <div className={styles.emptyState}>\n                    <div className={styles.emptyIcon}>\n                      {activeTab === \"habits\" && \"⚖️\"}\n                      {activeTab === \"dailies\" && \"📅\"}\n                      {activeTab === \"todos\" && \"✓\"}\n                    </div>\n                    <div className={styles.emptyText}>\n                      {`These are your ${activeTab}`}\n                      <br />\n                      {activeTab === \"habits\" &&\n                        \"Habits don't have a rigid schedule. You can check them off multiple times per day.\"}\n                      {activeTab === \"dailies\" &&\n                        \"Dailies repeat on a regular basis. Choose the schedule that works best for you!\"}\n                      {activeTab === \"todos\" &&\n                        \"To Dos need to be completed once. Add checklists to your To Dos to increase their value.\"}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4388, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Dhruvi/system/my-app/src/app/tasks/page.tsx"],"sourcesContent":["\"use client\";\r\nimport TaskManager from '../components/TaskManager';\r\n\r\nexport default function TasksPage() {\r\n  return <TaskManager />;\r\n} "],"names":[],"mappings":";;;;AACA;AADA;;;AAGe,SAAS;IACtB,qBAAO,8OAAC,wIAAA,CAAA,UAAW;;;;;AACrB","debugId":null}}]
}